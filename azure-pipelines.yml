trigger:
  branches:
    include:
     - main
     - develop
  paths:
    exclude:
      - ./**/*.md

pool:
  vmImage: windows-latest

variables:
  currentVersion: '3.0'
  betaVersion: '3.0'
  ${{if eq(variables['Build.SourceBranch'], 'refs/heads/main')}}:
    version: $[format('{0}.{1}', variables['currentVersion'], counter(variables['currentVersion'], 0))]
  ${{if eq(variables['Build.SourceBranch'], 'refs/heads/develop')}}:
    version: $[format('{0}.0-beta.{1}', variables['betaVersion'], counter(variables['betaVersion'], 30))]

name: $(version)

stages:
  - stage: build
    displayName: 'Build framework'
    jobs:
      - job: build
        displayName: 'Build framework'
        steps:
          - task: Npm@1
            displayName: 'Install dependencies'
            inputs:
              workingDir: '$(System.DefaultWorkingDirectory)'
              verbose: true

          - task: Npm@1
            displayName: 'Test framework'
            inputs:
              command: custom
              workingDir: '$(System.DefaultWorkingDirectory)'
              verbose: false
              customCommand: test
          
          - task: Npm@1
            displayName: 'Build package'
            inputs:
              command: custom
              workingDir: '$(System.DefaultWorkingDirectory)'
              verbose: false
              customCommand: 'run build'

          - task: DeleteFiles@1
            displayName: 'Prepare files'
            inputs:
              SourceFolder: '$(System.DefaultWorkingDirectory)'
              Contents: |
                node_modules
                .vs
                .git

          - task: PublishBuildArtifacts@1
            displayName: 'Publish build artifacts'
            inputs:
              PathtoPublish: "$(System.DefaultWorkingDirectory)"
              ArtifactName: "drop"
              publishLocation: "Container"

  - stage: release
    displayName: 'Release framework'
    dependsOn: build
    condition: succeeded()
    jobs:
      - job: release_beta
        displayName: 'Release beta version'
        condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/develop')) 
        steps:
          - task: DownloadBuildArtifacts@0
            displayName: 'Download build artifacts'
            inputs:
              buildType: "current"
              downloadType: "single"
              artifactName: "drop"
              downloadPath: "$(Build.ArtifactStagingDirectory)"

          - task: SetJsonProperty@1
            inputs:
              JsonFile: '$(System.DefaultWorkingDirectory)/drop/package.json'
              PropertyPath: 'version'
              PropertyValue: '$(version)'
          
          - task: Npm@1
            displayName: 'Publish new version'
            inputs:
              command: custom
              workingDir: '$(System.DefaultWorkingDirectory)/drop'
              verbose: true
              customCommand: 'publish --tag beta'
              customEndpoint: npm
              publishEndpoint: npm
